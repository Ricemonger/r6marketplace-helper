x-constants:
  &telegram-max-message-height: 100
  &telegram-max-message-count: 50

  &redis-container-name: r6helper-redis
  &redis-container-port: 6379

  &postgres-container-name: r6helper-postgres
  &postgres-container-port: 5432
  &postgres-db: postgres
  
  &kafka-container-name: r6helper-kafka
  &kafka-container-port: 9092

services:

  configs_fetcher:
    container_name: r6helper-configs-fetcher
    build:
      context: .
      dockerfile: configs_fetcher/Dockerfile
    image: r6helper-configs-fetcher
    ports:
      - "8091:8081"
    env_file:
      - ubi_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 86400000
      SCHEDULING_INITIAL_DELAY: 20000

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db
    networks:
      - postgres-net
      - redis-net

  item_day_sales_ubi_stats_fetcher:
    container_name: r6helper-item-day-sales-ubi-stats-fetcher
    build:
      context: .
      dockerfile: item_day_sales_ubi_stats_fetcher/Dockerfile
    image: r6helper-item-day-sales-ubi-stats-fetcher
    ports:
      - "8092:8082"
    env_file:
      - ubi_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 86400000
      SCHEDULING_INITIAL_DELAY: 180000

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db
    networks:
      - postgres-net
      - redis-net

  items_stats_fetcher:
    container_name: r6helper-item-stats-fetcher
    build:
      context: .
      dockerfile: item_stats_fetcher/Dockerfile
    image: r6helper-item-stats-fetcher
    ports:
      - "8093:8083"
    env_file:
      - ubi_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 180000
      SCHEDULING_INITIAL_DELAY: 30000

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db

      KAFKA_BOOTSTRAP_SERVER_HOST: *kafka-container-name
      KAFKA_BOOTSTRAP_SERVER_PORT: *kafka-container-port
      
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  item_trade_stats_calculator:
    container_name: r6helper-item-trade-stats-calculator
    build:
      context: .
      dockerfile: item_trade_stats_calculator/Dockerfile
    image: r6helper-item-trade-stats-calculator
    ports:
      - "8094:8084"
    env_file:
      - ubi_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY_ITEMS: 1200000
      SCHEDULING_INITIAL_DELAY_ITEMS: 540000
      SCHEDULING_FIXED_DELAY_TRADES: 60000
      SCHEDULING_INITIAL_DELAY_TRADES: 780000

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db
    networks:
        - postgres-net
        - redis-net

  main_user_reauthorizer:
    container_name: r6helper-main-user-reauthorizer
    build:
      context: .
      dockerfile: main_user_reauthorizer/Dockerfile
    image: r6helper-main-user-reauthorizer
    ports:
      - "8095:8085"
    env_file:
      - ubi_constants.env
      - auth_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 9000000
      SCHEDULING_INITIAL_DELAY: 0

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port
    networks:
      - postgres-net
      - redis-net

  notifications_service:
    container_name: r6helper-notifications-service
    build:
      context: .
      dockerfile: notifications_service/Dockerfile
    image: r6helper-notifications-service
    ports:
      - "8096:8086"
    env_file:
      - ubi_constants.env
      - auth_constants.env
    environment:
      TELEGRAM_BOT_MESSAGE_MAX_HEIGHT: *telegram-max-message-height
      TELEGRAM_BOT_MESSAGE_COUNT_LIMIT: *telegram-max-message-count

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db

      KAFKA_BOOTSTRAP_SERVER_HOST: *kafka-container-name
      KAFKA_BOOTSTRAP_SERVER_PORT: *kafka-container-port
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  telegram_bot_updates_consumer:
    container_name: r6helper-telegram-bot-updates-consumer
    build:
      context: .
      dockerfile: telegram_bot_updates_consumer/Dockerfile
    image: r6helper-telegram-bot-updates-consumer
    ports:
      - "8097:8087"
    env_file:
      - ubi_constants.env
      - auth_constants.env
    environment:
      TELEGRAM_BOT_MESSAGE_MAX_HEIGHT: *telegram-max-message-height
      TELEGRAM_BOT_MESSAGE_COUNT_LIMIT: *telegram-max-message-count

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db
    networks:
      - postgres-net
      - redis-net

  trades_manager:
    container_name: r6helper-trades-manager
    build:
      context: .
      dockerfile: trades_manager/Dockerfile
    image: r6helper-trades-manager
    ports:
      - "8098:8088"
    env_file:
      - ubi_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 60000
      SCHEDULING_INITIAL_DELAY: 930000

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db

      KAFKA_BOOTSTRAP_SERVER_HOST: *kafka-container-name
      KAFKA_BOOTSTRAP_SERVER_PORT: *kafka-container-port
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  ubi_users_stats_fetcher:
    container_name: r6helper-ubi-users-stats-fetcher
    build:
      context: .
      dockerfile: ubi_users_stats_fetcher/Dockerfile
    image: r6helper-ubi-users-stats-fetcher
    ports:
      - "8099:8089"
    env_file:
      - ubi_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 60000
      SCHEDULING_INITIAL_DELAY: 720000

      REDIS_SERVER_HOST: *redis-container-name
      REDIS_SERVER_PORT: *redis-container-port

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db

      KAFKA_BOOTSTRAP_SERVER_HOST: *kafka-container-name
      KAFKA_BOOTSTRAP_SERVER_PORT: *kafka-container-port
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  users_ubi_accs_reauthorizer:
    container_name: r6helper-users-ubi-accs-reauthorizer
    build:
      context: .
      dockerfile: users_ubi_accs_reauthorizer/Dockerfile
    image: r6helper-users-ubi-accs-reauthorizer
    ports:
      - "8100:8090"
    env_file:
      - ubi_constants.env
      - auth_constants.env
    environment:
      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 9000000
      SCHEDULING_INITIAL_DELAY: 90000

      POSTGRES_SERVER_HOST: *postgres-container-name
      POSTGRES_SERVER_PORT: *postgres-container-port
      POSTGRES_DB: *postgres-db

      KAFKA_BOOTSTRAP_SERVER_HOST: *kafka-container-name
      KAFKA_BOOTSTRAP_SERVER_PORT: *kafka-container-port
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  postgres:
    container_name: *postgres-container-name
    command: postgres -c 'max_connections=300'
    image: postgres:16.4
    ports:
      - "5432:5432"
    env_file:
      - auth_constants.env
    environment:
        POSTGRES_DB: *postgres-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    restart: always

  pgadmin:
    container_name: r6helper-pgadmin
    image: dpage/pgadmin4:8.12
    ports:
      - "5050:80"
    networks:
      - postgres-net
    env_file:
      - auth_constants.env
    environment:
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    restart: always

  redis:
    container_name: *redis-container-name
    image: redis:7.2.4-bookworm
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - redis-net
    restart: always

  redis-test:
    container_name: r6helper-redis-test
    image: redis:7.2.4-bookworm
    ports:
      - "6380:6379"
    volumes:
      - test-redis-data:/data
    networks:
      - redis-net
    restart: always

  kafka:
    container_name: *kafka-container-name
    image: bitnami/kafka:3.9.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_MOUNTED_CONF_DIR=/bitnami/kafka/config
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@r6helper-kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://r6helper-kafka:9091,CONTROLLER://r6helper-kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - kafka-net

networks:
  postgres-net:
  redis-net:
  kafka-net:

volumes:
  postgres-data:
  redis-data:
  test-redis-data:
  kafka-data:
