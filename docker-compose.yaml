services:

  configs_fetcher:
    container_name: r6helper-configs-fetcher
    build:
      context: .
      dockerfile: configs_fetcher/Dockerfile
    image: r6helper-configs-fetcher
    ports:
      - "8091:8081"
    environment:
      UBI_GRAPHQL_URL: https://public-ubiservices.ubi.com/v1/profiles/me/uplay/graphql
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US
      UBI_DATE_FORMAT: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 86400000
      SCHEDULING_INITIAL_DELAY: 20000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    networks:
      - postgres-net
      - redis-net

  item_day_sales_ubi_stats_fetcher:
    container_name: r6helper-item-day-sales-ubi-stats-fetcher
    build:
      context: .
      dockerfile: item_day_sales_ubi_stats_fetcher/Dockerfile
    image: r6helper-item-day-sales-ubi-stats-fetcher
    ports:
      - "8092:8082"
    environment:
      UBI_GRAPHQL_URL: https://public-ubiservices.ubi.com/v1/profiles/me/uplay/graphql
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US
      UBI_DATE_FORMAT: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
      UBI_ITEM_SALE_DATE_FORMAT: yyyy-MM-dd

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 86400000
      SCHEDULING_INITIAL_DELAY: 180000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    networks:
      - postgres-net
      - redis-net

  items_stats_fetcher:
    container_name: r6helper-item-stats-fetcher
    build:
      context: .
      dockerfile: item_stats_fetcher/Dockerfile
    image: r6helper-item-stats-fetcher
    ports:
      - "8093:8083"
    environment:
      UBI_GRAPHQL_URL: https://public-ubiservices.ubi.com/v1/profiles/me/uplay/graphql
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US
      UBI_DATE_FORMAT: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 180000
      SCHEDULING_INITIAL_DELAY: 30000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

      KAFKA_BOOTSTRAP_SERVER_HOST: r6helper-kafka
      KAFKA_BOOTSTRAP_SERVER_PORT: 9092
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  item_trade_stats_calculator:
    container_name: r6helper-item-trade-stats-calculator
    build:
      context: .
      dockerfile: item_trade_stats_calculator/Dockerfile
    image: r6helper-item-trade-stats-calculator
    ports:
      - "8094:8084"
    environment:
      UBI_MIN_UNCOMMON_PRICE: 10
      UBI_MAX_UNCOMMON_PRICE: 25000
      UBI_MIN_RARE_PRICE: 10
      UBI_MAX_RARE_PRICE: 250000
      UBI_MIN_EPIC_PRICE: 10
      UBI_MAX_EPIC_PRICE: 1000000
      UBI_MIN_LEGENDARY_PRICE: 10
      UBI_MAX_LEGENDARY_PRICE: 1000000

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY_ITEMS: 1200000
      SCHEDULING_INITIAL_DELAY_ITEMS: 540000
      SCHEDULING_FIXED_DELAY_TRADES: 60000
      SCHEDULING_INITIAL_DELAY_TRADES: 780000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    networks:
        - postgres-net
        - redis-net

  main_user_reauthorizer:
    container_name: r6helper-main-user-reauthorizer
    build:
      context: .
      dockerfile: main_user_reauthorizer/Dockerfile
    image: r6helper-main-user-reauthorizer
    ports:
      - "8095:8085"
    environment:
     # UBI_PLATFORM: UPLAY # platform of your Ubi Acc
     # UBI_EMAIL: your Ubi Acc's email, for main user, used for items, sales and marketplace configs + tags stats fetching
     # UBI_PASSWORD: your Ubi Acc's password
      UBI_AUTH_EXPIRE_TIMEOUT: 10500
      UBI_AUTH_URL: https://public-ubiservices.ubi.com/v3/profiles/sessions
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 9000000
      SCHEDULING_INITIAL_DELAY: 0

      REDIS_URL: redis://r6helper-redis:6379
    networks:
      - postgres-net
      - redis-net

  notifications_service:
    container_name: r6helper-notifications-service
    build:
      context: .
      dockerfile: notifications_service/Dockerfile
    image: r6helper-notifications-service
    ports:
      - "8096:8086"
    environment:
     # TELEGRAM_BOT_TOKEN: your tg bot token, receive from @BotFather, should be same as in notifications module
     # TELEGRAM_BOT_USERNAME: your tg bot username, receive from @BotFather, should be same as in notifications module
      TELEGRAM_BOT_MESSAGE_MAX_HEIGHT: 100
      TELEGRAM_BOT_MESSAGE_COUNT_LIMIT: 50

      UBI_AUTH_URL: https://public-ubiservices.ubi.com/v3/profiles/sessions
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

      KAFKA_BOOTSTRAP_SERVER_HOST: r6helper-kafka
      KAFKA_BOOTSTRAP_SERVER_PORT: 9092
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  telegram_bot_updates_consumer:
    container_name: r6helper-telegram-bot-updates-consumer
    build:
      context: .
      dockerfile: telegram_bot_updates_consumer/Dockerfile
    image: r6helper-telegram-bot-updates-consumer
    ports:
      - "8097:8087"
    environment:
     # TELEGRAM_BOT_TOKEN: your tg bot token, receive from @BotFather, should be same as in notifications module
     # TELEGRAM_BOT_USERNAME: your tg bot username, receive from @BotFather, should be same as in notifications module
      TELEGRAM_BOT_MESSAGE_MAX_HEIGHT: 100
      TELEGRAM_BOT_MESSAGE_COUNT_LIMIT: 50

     # PASSWORD_ENCRYPTION_KEY: AES password encryption key for storing passwords in db, should be the same as in users_ubi_accs_reauthorizer module

      UBI_AUTH_URL: https://public-ubiservices.ubi.com/v3/profiles/sessions
      UBI_TWO_FA_CODE_TO_SMS_URL: https://public-ubiservices.ubi.com/v3/profiles/me/2facode
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_2FA_APP_ID: 685a3038-2b04-47ee-9c5a-6403381a46aa
      UBI_TRUSTED_DEVICE_ID: 16a2c7f446d2fcb5b92d0efee317da39
      UBI_TRUSTED_DEVICE_FRIENDLY_NAME: Opera 114.0.0.0, Windows 10
      UBI_MIN_UNCOMMON_PRICE: 10
      UBI_MAX_UNCOMMON_PRICE: 25000
      UBI_MIN_RARE_PRICE: 10
      UBI_MAX_RARE_PRICE: 250000
      UBI_MIN_EPIC_PRICE: 10
      UBI_MAX_EPIC_PRICE: 1000000
      UBI_MIN_LEGENDARY_PRICE: 10
      UBI_MAX_LEGENDARY_PRICE: 1000000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    networks:
      - postgres-net
      - redis-net

  trades_manager:
    container_name: r6helper-trades-manager
    build:
      context: .
      dockerfile: trades_manager/Dockerfile
    image: r6helper-trades-manager
    ports:
      - "8098:8088"
    environment:
      UBI_GRAPHQL_URL: https://public-ubiservices.ubi.com/v1/profiles/me/uplay/graphql
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US
      UBI_DATE_FORMAT: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
      UBI_ITEM_SALE_DATE_FORMAT: yyyy-MM-dd
      UBI_MIN_UNCOMMON_PRICE: 10
      UBI_MAX_UNCOMMON_PRICE: 25000
      UBI_MIN_RARE_PRICE: 10
      UBI_MAX_RARE_PRICE: 250000
      UBI_MIN_EPIC_PRICE: 10
      UBI_MAX_EPIC_PRICE: 1000000
      UBI_MIN_LEGENDARY_PRICE: 10
      UBI_MAX_LEGENDARY_PRICE: 1000000

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 60000
      SCHEDULING_INITIAL_DELAY: 930000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: r6helper-postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

      KAFKA_BOOTSTRAP_SERVER_HOST: r6helper-kafka
      KAFKA_BOOTSTRAP_SERVER_PORT: 9092
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  ubi_users_stats_fetcher:
    container_name: r6helper-ubi-users-stats-fetcher
    build:
      context: .
      dockerfile: ubi_users_stats_fetcher/Dockerfile
    image: r6helper-ubi-users-stats-fetcher
    ports:
      - "8099:8089"
    environment:
      UBI_GRAPHQL_URL: https://public-ubiservices.ubi.com/v1/profiles/me/uplay/graphql
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_APP_ID: 80a4a0e8-8797-440f-8f4c-eaba87d0fdda
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US
      UBI_DATE_FORMAT: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 60000
      SCHEDULING_INITIAL_DELAY: 720000

      REDIS_URL: redis://r6helper-redis:6379

      POSTGRES_SERVER_HOST: postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

      KAFKA_BOOTSTRAP_SERVER_HOST: r6helper-kafka
      KAFKA_BOOTSTRAP_SERVER_PORT: 9092
    networks:
      - postgres-net
      - redis-net
      - kafka-net

  users_ubi_accs_reauthorizer:
    container_name: r6helper-users-ubi-accs-reauthorizer
    build:
      context: .
      dockerfile: users_ubi_accs_reauthorizer/Dockerfile
    image: r6helper-users-ubi-accs-reauthorizer
    ports:
      - "8100:8090"
    environment:
     # PASSWORD_ENCRYPTION_KEY: password encryption key for storing passwords in db, should be same as in telegram_bot_updates_consumer module

      UBI_AUTH_URL: https://public-ubiservices.ubi.com/v3/profiles/sessions
      UBI_TWO_FA_CODE_TO_SMS_URL: https://public-ubiservices.ubi.com/v3/profiles/me/2facode
      UBI_CONTENT_TYPE: application/json
      UBI_USER_AGENT: UbiServices_SDK_2020.Release.58_PC64_ansi_static
      UBI_2FA_APP_ID: 685a3038-2b04-47ee-9c5a-6403381a46aa
      UBI_SPACE_ID: 0d2ae42d-4c27-4cb7-af6c-2099062302bb
      UBI_REGION_ID: WW
      UBI_LOCALE_CODE: en-US
      UBI_TRUSTED_DEVICE_ID: 16a2c7f446d2fcb5b92d0efee317da39
      UBI_TRUSTED_DEVICE_FRIENDLY_NAME: Opera 114.0.0.0, Windows 10

      SCHEDULING_ENABLED: true
      SCHEDULING_FIXED_DELAY: 9000000
      SCHEDULING_INITIAL_DELAY: 90000

      POSTGRES_SERVER_HOST: postgres
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

      KAFKA_BOOTSTRAP_SERVER_HOST: r6helper-kafka
      KAFKA_BOOTSTRAP_SERVER_PORT: 9092
    networks:
      - postgres-net
      - redis-net
      - kafka-net


  postgres:
    container_name: r6helper-postgres
    command: postgres -c 'max_connections=300'
    image: postgres:16.4
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    restart: always

  pgadmin:
    container_name: r6helper-pgadmin
    image: dpage/pgadmin4:8.12
    ports:
      - "5050:80"
    networks:
      - postgres-net
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: 1234
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    restart: always

  redis:
    container_name: r6helper-redis
    image: redis:7.2.4-bookworm
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - redis-net
    restart: always

  redis-test:
    container_name: r6helper-redis-test
    image: redis:7.2.4-bookworm
    ports:
      - "6380:6379"
    volumes:
      - test-redis-data:/data
    networks:
      - redis-net
    restart: always

  kafka:
    container_name: r6helper-kafka
    image: bitnami/kafka:3.9.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_MOUNTED_CONF_DIR=/bitnami/kafka/config
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@r6helper-kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://r6helper-kafka:9091,CONTROLLER://r6helper-kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - kafka-net

networks:
  postgres-net:
  zipkin-net:
  redis-net:
  kafka-net:

volumes:
  postgres-data:
  redis-data:
  test-redis-data:
  kafka-data:
