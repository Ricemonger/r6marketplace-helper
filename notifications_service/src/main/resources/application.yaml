auth:
  telegram:
    bot:
      token: ${TELEGRAM_BOT_TOKEN}
      username: ${TELEGRAM_BOT_USERNAME}

telegram:
  bot:
    message:
      height: ${TELEGRAM_BOT_MESSAGE_MAX_HEIGHT:100}
      limit: ${TELEGRAM_BOT_MESSAGE_COUNT_LIMIT:50}

server:
  port: ${SERVER_PORT:8086}

logging:
  level:
    github: \${LOGGING_LEVEL:debug}
  file:
    name: ./logs/${LOG_FILE_DIRECTORY:prod}/${spring.application.name}.log

spring:
  application:
    name: r6s-helper-notifications-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_SERVER_HOST:localhost}:${POSTGRES_SERVER_PORT:5432}/${POSTGRES_DB:postgres}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:1234}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  kafka:
    admin:
      auto-create: true
    consumer:
      group-id: r6s-helper-notifications-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER_HOST:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:9092}
      properties:
        spring:
          json:
            trusted:
              packages: "java.util, java.lang, github.ricemonger.*"

  config:
    import:
      - auth-values.yaml
      - test-values.yaml