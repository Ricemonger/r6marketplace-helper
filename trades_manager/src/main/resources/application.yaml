ubi:
  urls:
    graphql: https://public-ubiservices.ubi.com/v1/profiles/me/uplay/graphql
  session:
    contentType: application/json
    userAgent: UbiServices_SDK_2020.Release.58_PC64_ansi_static
    baseAppId: ${UBI_APP_ID:80a4a0e8-8797-440f-8f4c-eaba87d0fdda}
    spaceId: ${UBI_SPACE_ID:0d2ae42d-4c27-4cb7-af6c-2099062302bb}
    regionId: ${UBI_REGION_ID:WW}
    localeCode: ${UBI_LOCALE_CODE:en-US}
    dateFormat: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
    itemSaleStatsDateFormat: yyyy-MM-dd
    minUncommonPrice: 10
    maxUncommonPrice: 25_000
    minRarePrice: 10
    maxRarePrice: 250_000
    minEpicPrice: 10
    maxEpicPrice: 1_000_000
    minLegendaryPrice: 10
    maxLegendaryPrice: 1_000_000

server:
  port: 8086

app:
  scheduling:
    enabled: ${SCHEDULING_ENABLED:true}

logging:
  level:
    github: debug

  file:
    name: ./logs/${LOG_FILE_DIRECTORY:prod}/${spring.application.name}.log

spring:
  application:
    name: r6s-helper
  kafka:
    admin:
      auto-create: true
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  data:
    redis:
      repositories:
        enabled: false
      url: ${REDIS_URL:redis://localhost:6379}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_SERVER_HOST:localhost}:${POSTGRES_SERVER_PORT:5432}/${POSTGRES_DB:postgres}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:1234}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

  config:
    import:
      - test-values.yaml